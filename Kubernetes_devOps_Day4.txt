#######################################################################
#######################################################################
#######################################################################
CREATING A POD DIRECTLY
#######################################################################
kubectl run my-nginx --image nginx
kubectl get pods
######
NAME       READY   STATUS    RESTARTS   AGE
my-nginx   1/1     Running   0          34s
#######################################################################
CREATING A DEPLOYMENT
#######################################################################
kubectl create deployment my-nginx --image nginx
kubectl get pods
kubectl get deploy
#######
NAME                        READY   STATUS    RESTARTS   AGE
my-nginx                    1/1     Running   0          7m10s
my-nginx-7fbf685c4d-kslgv   1/1     Running   0          15s
#######################################################################
CLEAN UP
#######################################################################
kubectl delete deploy my-nginx
kubectl delete pod my-nginx


#######################################################################
#######################################################################
docker          build   -t      tomcat_cdac:1.0         .
docker  tag     tomcat_cdac:1.0         newdelthis/tomcat_cdac:1.0
docker  push    newdelthis/tomcat_cdac:1.0
############
Docker file
############
FROM tomcat:8.0

RUN 	rm 	-rf 	/usr/local/tomcat/webapps/ROOT
RUN 	mkdir 	/usr/local/tomcat/webapps/ROOT
COPY 	index.jsp 	/usr/local/tomcat/webapps/ROOT
############
index.jsp
###########
<html>
  <head><title>Welcome</title></head>
  <body>
    <h1>Welcome to C-DAC</h1>
    <p>Pod IP: <%= request.getLocalAddr() %></p>
  </body>
</html>
############
tomcat_cdac.yml
###########
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-cdac
spec:
  replicas: 5
  selector:
    matchLabels:
      app: tomcat-cdac
  template:
    metadata:
      labels:
        app: tomcat-cdac
    spec:
      containers:
      - name: tomcat-cdac
        image: newdelthis/tomcat_cdac:1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-cdac-service
spec:
  type: NodePort
  selector:
    app: tomcat-cdac
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 30000
